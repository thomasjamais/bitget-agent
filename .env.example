# Bitget Trading Bot Environment Configuration

# ========================================
# BITGET API CREDENTIALS
# ========================================
# Get these from https://www.bitget.com/api-doc (for mainnet)
# Or from https://www.bitget.com/testnet (for testnet - RECOMMENDED for testing)

BITGET_API_KEY=your_api_key_here
BITGET_API_SECRET=your_api_secret_here  
BITGET_API_PASSPHRASE=your_api_passphrase_here

# ========================================
# SAFETY SETTINGS
# ========================================
# IMPORTANT: Always use testnet when testing!
BITGET_USE_TESTNET=true

# Enable real order placement (disabled by default for safety)
ENABLE_ORDER_TEST=false

# ========================================
# BOT CONFIGURATION  
# ========================================
# Configuration File Path
CONFIG_PATH=./config/bot.yaml

# Default symbol to trade (Bitget futures format)
BOT_SYMBOL=BTCUSDT_UMCBL

# Default timeframe for technical analysis
BOT_TIMEFRAME=5m

# Risk management
BOT_EQUITY_USDT=1000
BOT_MAX_POSITION_SIZE=100
BOT_MAX_LEVERAGE=10
MAX_DAILY_LOSS=5.0

# ========================================
# LOGGING CONFIGURATION
# ========================================
LOG_LEVEL=info

# ========================================
# NEWS INTELLIGENCE CONFIGURATION
# ========================================
# OpenAI API Key (Required for enhanced news analysis)
OPENAI_API_KEY=your_openai_api_key_here

# Perplexity API Key (Required for real-time news data)
PERPLEXITY_API_KEY=your_perplexity_api_key_here

# News Intelligence Settings
NEWS_UPDATE_INTERVAL=15  # minutes
NEWS_CONFIDENCE_THRESHOLD=0.3
NEWS_IMPACT_WEIGHT=0.3  # 30% weight for news vs 70% technical

# Enhanced AI Configuration
ENHANCED_AI_MODE=true
TECHNICAL_WEIGHT=0.7
NEWS_WEIGHT=0.3
RISK_ADJUSTMENT_ENABLED=true

# ========================================
# NOTIFICATION SETTINGS (Optional)
# ========================================
DISCORD_WEBHOOK_URL=
SLACK_WEBHOOK_URL=

# ========================================
# GETTING STARTED
# ========================================
# 1. Sign up for Bitget testnet: https://www.bitget.com/testnet
# 2. Create API credentials with futures trading permissions
# 3. Replace the placeholder values above with your credentials
# 4. Keep BITGET_USE_TESTNET=true for testing
# 5. Run: npm run test:orders
# 6. Once confident, you can switch to mainnet and enable real trading
EMAIL_SMTP_USER=
EMAIL_SMTP_PASSWORD=