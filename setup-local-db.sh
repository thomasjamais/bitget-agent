#!/bin/bash

# Local Database Setup Script for Trading Bot
# This script helps you set up the local PostgreSQL database

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ Setting up local database for Trading Bot...${NC}"

# Check if PostgreSQL is running
check_postgres() {
    echo -e "${BLUE}üîç Checking PostgreSQL status...${NC}"
    
    if ! command -v psql &> /dev/null; then
        echo -e "${RED}‚ùå PostgreSQL client (psql) not found. Please install PostgreSQL first.${NC}"
        exit 1
    fi
    
    # Check if PostgreSQL is running
    if ! pg_isready -q; then
        echo -e "${RED}‚ùå PostgreSQL is not running. Please start PostgreSQL first.${NC}"
        echo -e "${YELLOW}üí° On Ubuntu/Debian: sudo systemctl start postgresql${NC}"
        echo -e "${YELLOW}üí° On macOS: brew services start postgresql${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ PostgreSQL is running${NC}"
}

# Create database and user
setup_database() {
    echo -e "${BLUE}üóÑÔ∏è Setting up database and user...${NC}"
    
    # Get database configuration
    read -p "Enter PostgreSQL username (default: postgres): " DB_USERNAME
    DB_USERNAME=${DB_USERNAME:-postgres}
    
    read -p "Enter PostgreSQL password: " -s DB_PASSWORD
    echo
    
    read -p "Enter database name (default: trading_bot): " DB_NAME
    DB_NAME=${DB_NAME:-trading_bot}
    
    read -p "Enter database host (default: localhost): " DB_HOST
    DB_HOST=${DB_HOST:-localhost}
    
    read -p "Enter database port (default: 5432): " DB_PORT
    DB_PORT=${DB_PORT:-5432}
    
    # Create database
    echo -e "${YELLOW}üìä Creating database '${DB_NAME}'...${NC}"
    PGPASSWORD="$DB_PASSWORD" createdb -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USERNAME" "$DB_NAME" 2>/dev/null || {
        echo -e "${YELLOW}‚ö†Ô∏è Database '${DB_NAME}' might already exist${NC}"
    }
    
    echo -e "${GREEN}‚úÖ Database setup completed${NC}"
}

# Create environment file
create_env_file() {
    echo -e "${BLUE}üìù Creating environment file...${NC}"
    
    cat > .env << EOF
# Local Development Environment Variables
# Generated by setup-local-db.sh

# Database Configuration (Local PostgreSQL)
DB_HOST=${DB_HOST}
DB_PORT=${DB_PORT}
DB_NAME=${DB_NAME}
DB_USERNAME=${DB_USERNAME}
DB_PASSWORD=${DB_PASSWORD}
AWS_REGION=us-east-1

# Bot Configuration
NODE_ENV=development
CONFIG_PATH=./config/bot.yaml

# Bitget API Keys (REQUIRED - Fill these in)
BITGET_API_KEY=your-bitget-api-key
BITGET_SECRET=your-bitget-secret
BITGET_PASSPHRASE=your-bitget-passphrase

# AI Configuration (Optional)
OPENAI_API_KEY=your-openai-api-key
PERPLEXITY_API_KEY=your-perplexity-api-key
ENHANCED_AI_MODE=false

# Logging
LOG_LEVEL=info

# Security (for local development)
JWT_SECRET=local-dev-jwt-secret-$(openssl rand -hex 16)
ENCRYPTION_KEY=local-dev-encryption-key-$(openssl rand -hex 16)
EOF
    
    echo -e "${GREEN}‚úÖ Environment file created: .env${NC}"
}

# Run database migrations
run_migrations() {
    echo -e "${BLUE}üîÑ Running database migrations...${NC}"
    
    # Set environment variables for migration
    export DB_HOST DB_PORT DB_NAME DB_USERNAME DB_PASSWORD AWS_REGION
    
    # Run migrations
    npm run db:migrate:local
    
    echo -e "${GREEN}‚úÖ Database migrations completed${NC}"
}

# Test database connection
test_connection() {
    echo -e "${BLUE}üß™ Testing database connection...${NC}"
    
    # Test connection
    PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USERNAME" -d "$DB_NAME" -c "SELECT 'Connection successful' as status;" > /dev/null
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ Database connection test successful${NC}"
    else
        echo -e "${RED}‚ùå Database connection test failed${NC}"
        exit 1
    fi
}

# Show next steps
show_next_steps() {
    echo -e "${GREEN}üéâ Local database setup completed successfully!${NC}"
    echo
    echo -e "${BLUE}üìã Next steps:${NC}"
    echo -e "1. ${YELLOW}Edit .env file${NC} - Add your Bitget API keys"
    echo -e "2. ${YELLOW}Start the bot:${NC} npm run start:local"
    echo -e "3. ${YELLOW}For development:${NC} npm run dev:local"
    echo -e "4. ${YELLOW}With dashboard:${NC} npm run dev:full:local"
    echo
    echo -e "${BLUE}üìä Database information:${NC}"
    echo -e "   Host: ${DB_HOST}"
    echo -e "   Port: ${DB_PORT}"
    echo -e "   Database: ${DB_NAME}"
    echo -e "   Username: ${DB_USERNAME}"
    echo
    echo -e "${BLUE}üîß Useful commands:${NC}"
    echo -e "   ${YELLOW}View database:${NC} psql -h ${DB_HOST} -p ${DB_PORT} -U ${DB_USERNAME} -d ${DB_NAME}"
    echo -e "   ${YELLOW}Run migrations:${NC} npm run db:migrate:local"
    echo -e "   ${YELLOW}Start bot:${NC} npm run start:local"
}

# Main setup function
main() {
    echo -e "${BLUE}üöÄ Starting local database setup...${NC}"
    
    check_postgres
    setup_database
    create_env_file
    test_connection
    run_migrations
    show_next_steps
}

# Run main function
main
